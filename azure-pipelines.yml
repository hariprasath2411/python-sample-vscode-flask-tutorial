# Azure DevOps Pipeline: Python to Linux Web App on Azure
# Docs: https://docs.microsoft.com/azure/devops/pipelines/languages/python

trigger:
  - main

variables:
  # Azure Resource Manager connection created during pipeline creation
  azureServiceConnectionId: 'a67518d7-a232-4214-b5ed-c1d640688039'

  # Web app name
  webAppName: 'aitrail-flask'

  # Agent VM image name
  vmImageName: 'ubuntu-latest'

  # Environment name
  environmentName: 'aitrail-flask'

  # Project root folder (where your main app files are located)
  projectRoot: $(System.DefaultWorkingDirectory)

  # Python version
  pythonVersion: '3.11'

stages:
  - stage: Build
    displayName: 'Build Stage'
    jobs:
      - job: BuildJob
        pool:
          vmImage: $(vmImageName)
        steps:
          - task: UsePythonVersion@0
            inputs:
              versionSpec: '$(pythonVersion)'
            displayName: 'Use Python $(pythonVersion)'

          - script: |
              python -m venv antenv
              source antenv/bin/activate
              python -m pip install --upgrade pip
              pip install -r requirements.txt
            workingDirectory: $(projectRoot)
            displayName: 'Install requirements'

          - task: ArchiveFiles@2
            displayName: 'Archive files'
            inputs:
              rootFolderOrFile: '$(projectRoot)'
              includeRootFolder: false
              archiveType: zip
              archiveFile: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip'
              replaceExistingArchive: true

          - publish: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip'
            displayName: 'Upload package'
            artifact: drop

  - stage: Deploy
    displayName: 'Deploy Web App'
    dependsOn: Build
    condition: succeeded()
    jobs:
      - deployment: DeploymentJob
        pool:
          vmImage: $(vmImageName)
        environment: $(environmentName)
        strategy:
          runOnce:
            deploy:
              steps:
                - task: UsePythonVersion@0
                  inputs:
                    versionSpec: '$(pythonVersion)'
                  displayName: 'Use Python version'

                - task: AzureWebApp@1
                  displayName: 'Deploy Azure Web App: $(webAppName)'
                  inputs:
                    azureSubscription: $(azureServiceConnectionId)
                    appName: $(webAppName)
                    package: '$(Pipeline.Workspace)/drop/$(Build.BuildId).zip'
